
:: PyDotnet :: Seamless ::
==========================
The module for integration of PyDotnet with Interactive Python

::: FEATURES :::
================
- Use help() on any .NET namespace, class, object, method at will
- Use help(dotnet.clr) to obtain list of namespaces an assemblies
- Use help() on imported namespaces, e.g.
     import System.Collections
     help(System.Collections)

- Use help() on types, e.g. `help(List)`
- Use help() on constructors, e.g. `help(List.__createinstance__)`
- Use help() on unbound methods, e.g. `help(List[Int32].FindIndex)`
- Use help() on bound methods, e.g. `help(myList.FindIndex)`

- Use type(), isinstance(), issubclass() on .NET objects and types

- Generic method support is ON
- Extension method support is ON

!!! IMPORTANT !!!
=================
Please, remember to NOT USE 'import dotnet.seamless' IN PRODUCTION CODE. This
module is provided for you, so you can use it when you browse around .NET world
while in Python interactive mode.

!!! WARNING !!!
===============
This module overrides help(), type(), isinstance(), issubclass() methods. If
you use this module in production code you may get unexpected behavior.

::: PRODUCTION CODE :::
=======================
Please, for production code use 'import dotnet' and:
 - if you need to enable support for generic methods use:
     dotnet.genericmethod.install()
   (NOTE: make sure you call that ONLY ONCE)

 - if you need to enable support for extension methods use:
     dotnet.extensionmethod.install()
   (NOTE: make sure you call that ONLY ONCE)

 - if you want type(), isinstance(), and issubclass() then use:
     from dotnet.overrides import type, isinstance, issubclass
   (NOTE: you need to do that only in module, which uses these)

 - if you want to import common .NET types use:
     from dotnet.commontypes import *
   (NOTE: you need to do that in your module, which uses any of:
    Action*, Func*, Array, Tuple*, Dictionary)

Void Connection(
	String strFile
	)

Void Close(
	)

Int32 CollectionName2Id(
	String strParentClassName,
	String strChildClassName,
	String strCollectionName
	)

String ObjectId2Name(
	Int32 ObjectId
	)

Int32 ObjectName2Id(
	ClassEnum ClassId,
	String Name
	)

String[] GetObjects(
	ClassEnum nClassId
	)

String[] GetObjectsInCategory(
	ClassEnum nClassId,
	String strCategory
	)

String[] GetCategories(
	ClassEnum nClassId
	)

String[] GetReportedProperties(
	)

Boolean CategoryExists(
	ClassEnum nClassId,
	String strCategory
	)

String[] GetMemberships(
	CollectionEnum nCollectionId
	)

String[] GetChildMembers(
	CollectionEnum nCollectionId,
	String strParent
	)

String[] GetParentMembers(
	CollectionEnum nCollectionId,
	String strChild
	)

Int32 PropertyName2EnumId(
	String strParentClassName,
	String strChildClassName,
	String strCollectionName,
	String strPropertyName
	)

Int32 PropertyName2Id(
	String strParentClassName,
	String strChildClassName,
	String strCollectionName,
	String strPropertyName
	)

Void PropertyDetails(
	String strParentClassName,
	String strChildClassName,
	String strCollectionName,
	String[]& strPropertyName,
	Int32[]& nEnumId
	)

Int32 TimeSliceName2Id(
	String strTimeSliceName
	)

Void SetSelectedColumns(
	String[]& columns
	)

String[] GetSelectedColumns(
	)

Void CleanSelectedColumns(
	)

Recordset Query(
	SimulationPhaseEnum SimulationPhaseId,
	CollectionEnum CollectionId,
	String ParentName,
	String ChildName,
	PeriodEnum PeriodTypeId,
	SeriesTypeEnum SeriesTypeId,
	String PropertyList[ = None],
	Object DateFrom[ = None],
	Object DateTo[ = None],
	String TimesliceList[ = None],
	String SampleList[ = None],
	String ModelName[ = None],
	AggregationEnum AggregationType[ = None],
	String Category[ = None],
	String Filter[ = None]
	)

SolutionResultList QueryToList(
	SimulationPhaseEnum SimulationPhaseId,
	CollectionEnum CollectionId,
	String ParentName,
	String ChildName,
	PeriodEnum PeriodTypeId,
	SeriesTypeEnum SeriesTypeId,
	String PropertyList[ = None],
	Object DateFrom[ = None],
	Object DateTo[ = None],
	String TimesliceList[ = None],
	String SampleList[ = None],
	String ModelName[ = None],
	AggregationEnum AggregationType[ = None],
	String Category[ = None],
	String Filter[ = None]
	)

Boolean QueryToCSV(
	String strCSVFile,
	Boolean bAppendToFile,
	SimulationPhaseEnum SimulationPhaseId,
	CollectionEnum CollectionId,
	String ParentName,
	String ChildName,
	PeriodEnum PeriodTypeId,
	SeriesTypeEnum SeriesTypeId,
	String PropertyList[ = None],
	Object DateFrom[ = None],
	Object DateTo[ = None],
	String TimesliceList[ = None],
	String SampleList[ = None],
	String ModelName[ = None],
	AggregationEnum AggregationType[ = None],
	String Category[ = None],
	String Separator[ = ,]
	)

String get_SystemName(
	)

Recordset GetData(
	String TableName,
	String[]& strFields
	)

DataTable GetDataTable(
	String TableName,
	String& strFields
	)

Boolean get_DisplayAlerts(
	)

Void set_DisplayAlerts(
	Boolean AutoPropertyValue
	)

Boolean Equals(
	Object obj
	)

Int32 GetHashCode(
	)

Type GetType(
	)

String ToString(
	)

